#################################################
# Created on: 2016年1月28日
# @author: 张晓宇
# Email: 61411916@qq.com
# Blog: http://www.cnblogs.com/zhangxiaxuan/
# GitHub: https://github.com/ZhangXiaoyu-Chief
#################################################


作业一：计算器
    1、通过输入类似‘1 - 2 * ( (60-30 +(-40/5) * (9-2*5/3 + 7 /3*99/4*2998 +10 * 568/14 )) - (-4*3)/ (16-3*2) )’这样的四则运算表达式，计算最后的结果
    2、输入只能包括的(),+,-,*,/,.等符号和数字，必须符合四则运算规则
    2、不能使用eval

程序结构：
.
├── model #=> 模型模块
│   ├── calculator.py #=> 计算器模块
│   └── __init__.py
├── Readme.txt
└── myEval.py #=> 主程序


程序配置：
    无


运行环境：Python3.0或以上版本并配置好环境变量（linux主机为了和自带的python2.x版本不冲突，需将python3.X的可执行文件重名为python3或创建名为python3的软链接链接到python的可知文件）

执行方法：
    1、Linux：直接执行# python3 myEval.py或#./myEval.py（需要给主程序文件添加可执行权限）
    2、Window：执行python myEval.py

使用方法：
    1、主界面：直接输入四则运算表达式即可，输入q退出程序，目前只支持+-*/四则运算，和()表示优先级
    2、输入完表达式后，按回车即显示运算结果结果包含程序本身运算结果和python自带的内置函数eval计算的结果用于验证程序计算的结果


所有流程大致如下：
请输入四则运算表达式（输入q退出程序）：
例如：1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))
>> 1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2)) #=> 输入自带的例子，取自作业说明
myEval： 2776672.6952380957
eval： 2776672.6952380957 #=> 运算结果与python内置函数eval一致，给自己一个赞
按任意键继续
请输入四则运算表达式（输入q退出程序）：
例如：1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))
>> - -(1.1+1+1 -( -1) -(1+1 + (1+1+2.2))) + - - - - -111 + - - + + - - 3 - + + + + + + + - - - + - - - 1+4  + 4    /  2+(1+3)*4.1+(2-1.1)*2 /2*3 #=> 例子来自于群，其他同学用来测试的表达式（比较有代表性，有浮点数，有多个正负号的情况），改了改
myEval： -85.99999999999999
eval： -85.99999999999999
下面是几个不合法的表达式例子
>> 1h2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2)) #=>有一个非法字符h
输入的的表达不合法，请检查
按任意键继续
>> 1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))) #=>多了一个右括号)
输入的的表达不合法，请检查
按任意键继续