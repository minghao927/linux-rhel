#################################################
# Created on: 2016年1月14日
# @author: 张晓宇
# Email: 61411916@qq.com
# Blog: http://www.cnblogs.com/zhangxiaxuan/
# GitHub: https://github.com/ZhangXiaoyu-Chief
#################################################


作业一：购物车（购物商城）
    1、输入用户名密码
    2、认证成功系那是欢迎信息
    3、输错三次后锁定

程序结构：
.
├── conf.py #=> 配置文件
├── customer.db #=> 客户信息数据文件
├── goods.db #=> 商品信息配置文件
├── model #=> 模型模块
│   ├── customer.py #=> 用户模型模块
│   ├── goods.py #=> 商品模型模块
│   └── __init__.py
├── Readme.txt
├── shoping.py #=> 主程序
└── utility #=> 功能模块
    ├── __init__.py
    └── MyFileHelper.py #=> 文件操作模块

程序配置：
    配置文件：con.py
        goods_file = "商品数据文件地址"
        customer_file = "用户数据文件地址"
        error_count_max = 密码最多可以输入错误次数
        app_info = '''
        应用及版权信息'''
        # 主菜单
        main_menu = ['主菜单项目1','主菜单项目2','主菜单项目2']
        max_per_page =

    客户信息文件：customer.db
        1、每个客户信息占用1行，中间用空格分隔例如：
            65brother 123456 unlock 0 10000
        2、每列顺序依次为用户名、密码、状态（lock/unlock）、密码输入错误次数、余额
        3、由于使用空格分隔，所有信息不能使用空格
        4、客户状态有两种锁定和正常，用lock和unlock表示
        5、严格区分大小写
        6、用户名不能是quit
        7、用户名作为唯一标示不能重复

    商品信息文件: goods.py
        1、每个商品信息占用1行，中间用空格分隔例如：
            1 苹果6S_16G_玫瑰金色_移动联通电信4G手机 6000 手机/数码
        2、每列顺序依次为商品id、商品名、价格、分类
        3、由于使用空格分隔，所有信息不能使用空格
        4、严格区分大小写
        5、要按照商品id正序排列，且必须按照顺序
        6、id作为唯一标示，不能重复

运行环境：Python3.0或以上版本并配置好环境变量（linux主机为了和自带的python2.x版本不冲突，需将python3.X的可执行文件重名为python3或创建名为python3的软链接链接到python的可知文件）

执行方法：
    1、Linux：直接执行# python3 shopping.py或#./shopping.py（需要给主程序文件添加可执行权限）
    2、Window：执行python login.py

使用方法：
    1、登录：按照控制台提示输入用户名和密码，密码输入错误三次将被锁定
    2、主界面：显示主菜单和用户名及用户当前余额。输入菜单编号进入相应界面。1、购物；2、显示购物车并进行相应操作；3、退出程序
    2、购物：进入主程序后输入1，进入购物界面，输入商品编号并确认可将商品放入购物车，输入r返回主界面，输入n进入下一页，输入b进入上一页
    3、购物车：输入相应操作
       p)、支付：如果当前余额足够，将正常支付，如果不够将提示错误
       e)、清空购物车，删除购物车所有商品
       d)、删除单件商品，通过用户和输入购物车内的商品编号删除（该商品数量减1，小计递减），直到商品数量为0将该条记录移出购物车
       r)、返回上级菜单（主界面）

